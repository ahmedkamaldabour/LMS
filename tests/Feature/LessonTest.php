<?php

namespace Tests\Feature;

use App\Models\Admin;
use App\Models\Course;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Http\UploadedFile;
use Illuminate\Support\Facades\Storage;
use Tests\TestCase;

class LessonTest extends TestCase
{
    use RefreshDatabase;
    private $admin;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->admin = Admin::factory()->create();
    }

    /**
     * A basic feature test example.
     *
     * @return void
     */
    public function test_lesson_index()
    {
         $response = $this->actingAs($this->admin)->get('/admin/lessons/index');

        $response->assertStatus(302);

    }
    public function test_lesson_store_with_type_text()
    {
        $course = Course::factory()->create();
        $response = $this->actingAs($this->admin)->post('/admin/lessons/store',[
            'title' => 'test_text',
            'type' => 'text',
            'time'=> '100',
            'text' => 'test',
            'course_id' => $course->getAttribute('id'),
        ]);
        $this->assertDatabaseHas('lessons', [
            'title' => 'test_text',
            'type' => 'text',
            'course_id' => $course->getAttribute('id'),
        ]);

    }

    public function test_lesson_store_with_type_file()
    {

        $course = Course::factory()->create();
        $file = UploadedFile::fake()->create('test-pdf.pdf', 1000, 'application/pdf');
        $text= "sds";
        $response = $this->actingAs($this->admin)->post('/admin/lessons/store',[
            'title' => 'test',
            'type' => 'file',
            'time'=> '100',
            'file' =>  $file,
            'course_id' => $course->getAttribute('id'),
        ]);
        $this->assertDatabaseHas('lessons', [
            'title' => 'test',
            'type' => 'file',
            'course_id' => $course->getAttribute('id'),
        ]);

    }
    // public function test_lesson_store_with_type_file_with_fail()
    public function test_lesson_store_with_type_file_with_fail()
    {
        $course = Course::factory()->create();
        $file = UploadedFile::fake()->create('test-pdf.pdf', 1000, 'application/pdf');
        $text= "sds";
        $response = $this->actingAs($this->admin)->post('/admin/lessons/store',[
            'title' => 'test',
            'type' => 'file',
            'time'=> '100',
            'text' =>  $text,
            'course_id' => $course->getAttribute('id'),
        ]);
        $this->assertDatabaseMissing('lessons', [
            'title' => 'test',
            'type' => 'file',
            'course_id' => $course->getAttribute('id'),
        ]);

    }

    // public function test_lesson_store_with_type_video()
    public function test_lesson_store_with_type_video()
    {
        $course = Course::factory()->create();
        $file = UploadedFile::fake()->create('test-video.mp4', 1000, 'video/mp4');
        $text= "sds";
        $response = $this->actingAs($this->admin)->post('/admin/lessons/store',[
            'title' => 'test',
            'type' => 'video',
            'time'=> '100',
            'video' =>  $file,
            'course_id' => $course->getAttribute('id'),
        ]);
        $this->assertDatabaseHas('lessons', [
            'title' => 'test',
            'type' => 'video',
            'course_id' => $course->getAttribute('id'),
        ]);

    }

    // public function test_lesson_store_with_type_video_with_fail()
    public function test_lesson_store_with_type_video_with_fail()
    {
        $course = Course::factory()->create();
        $file = UploadedFile::fake()->create('test-video.mp4', 1000, 'video/mp4');
        $text= "sds";
        $response = $this->actingAs($this->admin)->post('/admin/lessons/store',[
            'title' => 'test',
            'type' => 'video',
            'time'=> '100',
            'text' =>  $text,
            'course_id' => $course->getAttribute('id'),
        ]);
        $this->assertDatabaseMissing('lessons', [
            'title' => 'test',
            'type' => 'video',
            'course_id' => $course->getAttribute('id'),
        ]);

    }


}
